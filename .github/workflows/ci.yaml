name: CI

on:
  push:
  pull_request:

jobs:
  lab2-build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: lab2_dockerFile
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        run: docker build -t hello-docker:ci .

      - name: Run container
        run: docker run -d --name hello -p 3000:3000 hello-docker:ci

      - name: Wait for app
        run: |
          for i in {1..20}; do
            if curl -fsS http://localhost:3000 >/dev/null; then exit 0; fi
            sleep 1
          done
          echo "App not responding"; docker logs hello; exit 1

      - name: Show logs (always)
        if: always()
        run: docker logs hello || true

  publish:
    needs: lab2-build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    env:
      IMAGE_NAME: yassirrh/hello-docker   # <-- change to your Docker Hub repo
    defaults:
      run:
        working-directory: lab2_dockerFile
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short
            type=ref,event=tag

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./lab2_dockerFile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
